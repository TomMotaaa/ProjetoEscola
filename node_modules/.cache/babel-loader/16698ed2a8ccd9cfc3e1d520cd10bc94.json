{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport './carometro.css';\nimport { useState, useEffect } from \"react\";\nimport Main from \"../template/Main\";\nimport axios from \"axios\";\nconst title = 'Carômetro';\nconst urlAPIAlunos = 'http://localhost:5014/api/aluno';\nconst urlAPICursos = 'http://localhost:5014/api/curso';\nconst infos = {\n  cursos: {\n    id: 0,\n    codCurso: '',\n    nomeCurso: '',\n    periodo: ''\n  },\n  listaAlunos: [],\n  listaCursos: []\n};\n\nconst geradorDeLetras = () => {\n  return Math.random().toString(36).substring(2, 9);\n};\n\nexport default function Carometro() {\n  _s();\n\n  const [listaAlunos, setListaAlunos] = useState(infos.listaAlunos);\n  const [listaCursos, setListaCursos] = useState(infos.listaCursos);\n  const [cursos, setCursos] = useState(infos.cursos);\n  useEffect(() => {\n    axios(urlAPICursos).then(resp => setListaCursos(resp.data));\n  }, []);\n\n  const getAlunosCadastrados = async codCurso => {\n    return await axios(urlAPIAlunos).then(resp => {\n      const listaAlunos = resp.data;\n      return listaAlunos.filter(alunos => alunos.codCurso === codCurso);\n    });\n  };\n\n  const atualizarAlunos = async evento => {\n    const codCurso = evento.target.value;\n\n    if (evento.target.value === '') {\n      setListaAlunos(infos.listaAlunos);\n      setCursos(infos.cursos);\n      return;\n    }\n\n    cursos.codCurso = Number(codCurso);\n    const listaAlunos = await getAlunosCadastrados(cursos.codCurso);\n    if (!Array.isArray(listaAlunos)) return;\n    setListaAlunos(listaAlunos);\n    setCursos(cursos);\n  };\n}\n\n_s(Carometro, \"BOKy7vKqstDX8Hw3i2jRjew/HNM=\");\n\n_c = Carometro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carometro\");","map":{"version":3,"names":["React","useState","useEffect","Main","axios","title","urlAPIAlunos","urlAPICursos","infos","cursos","id","codCurso","nomeCurso","periodo","listaAlunos","listaCursos","geradorDeLetras","Math","random","toString","substring","Carometro","setListaAlunos","setListaCursos","setCursos","then","resp","data","getAlunosCadastrados","filter","alunos","atualizarAlunos","evento","target","value","Number","Array","isArray"],"sources":["/Users/u21426/escola/src/components/Carometro/carometro.js"],"sourcesContent":["import React from \"react\";\nimport './carometro.css'\nimport { useState, useEffect } from \"react\";\nimport Main from \"../template/Main\";\nimport axios from \"axios\";\n\nconst title = 'Carômetro'\nconst urlAPIAlunos = 'http://localhost:5014/api/aluno';\nconst urlAPICursos = 'http://localhost:5014/api/curso';\nconst infos = {\n    cursos: { id: 0, codCurso: '', nomeCurso: '', periodo: ''},\n    listaAlunos: [],\n    listaCursos: []\n}\n\nconst geradorDeLetras = () => {\n    return Math.random().toString(36).substring(2, 9);\n}\n\nexport default function Carometro() {\n\n    const [listaAlunos, setListaAlunos] = useState(infos.listaAlunos)\n    const [listaCursos, setListaCursos] = useState(infos.listaCursos)\n    const [cursos, setCursos] = useState(infos.cursos)\n\n    useEffect( () => {\n        axios(urlAPICursos)\n            .then((resp) => setListaCursos(resp.data))\n    }, []);\n\n    const getAlunosCadastrados = async (codCurso) => {\n        return await axios(urlAPIAlunos)\n                        .then((resp) => {\n                            const listaAlunos = resp.data\n                            return listaAlunos.filter(\n                                (alunos) => alunos.codCurso === codCurso\n                            )\n                        })\n    }\n\n    const atualizarAlunos = async (evento) => {\n        const codCurso = evento.target.value;\n        if (evento.target.value === '') {\n            setListaAlunos(infos.listaAlunos)\n            setCursos(infos.cursos)\n            return\n        }\n        cursos.codCurso = Number(codCurso)\n        const listaAlunos = await getAlunosCadastrados(cursos.codCurso)\n        if (!Array.isArray(listaAlunos)) return;\n\n        setListaAlunos(listaAlunos)\n        setCursos(cursos)\n    }\n\n    \n    \n}"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,KAAK,GAAG,WAAd;AACA,MAAMC,YAAY,GAAG,iCAArB;AACA,MAAMC,YAAY,GAAG,iCAArB;AACA,MAAMC,KAAK,GAAG;EACVC,MAAM,EAAE;IAAEC,EAAE,EAAE,CAAN;IAASC,QAAQ,EAAE,EAAnB;IAAuBC,SAAS,EAAE,EAAlC;IAAsCC,OAAO,EAAE;EAA/C,CADE;EAEVC,WAAW,EAAE,EAFH;EAGVC,WAAW,EAAE;AAHH,CAAd;;AAMA,MAAMC,eAAe,GAAG,MAAM;EAC1B,OAAOC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,EAAwC,CAAxC,CAAP;AACH,CAFD;;AAIA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAEhC,MAAM,CAACP,WAAD,EAAcQ,cAAd,IAAgCrB,QAAQ,CAACO,KAAK,CAACM,WAAP,CAA9C;EACA,MAAM,CAACC,WAAD,EAAcQ,cAAd,IAAgCtB,QAAQ,CAACO,KAAK,CAACO,WAAP,CAA9C;EACA,MAAM,CAACN,MAAD,EAASe,SAAT,IAAsBvB,QAAQ,CAACO,KAAK,CAACC,MAAP,CAApC;EAEAP,SAAS,CAAE,MAAM;IACbE,KAAK,CAACG,YAAD,CAAL,CACKkB,IADL,CACWC,IAAD,IAAUH,cAAc,CAACG,IAAI,CAACC,IAAN,CADlC;EAEH,CAHQ,EAGN,EAHM,CAAT;;EAKA,MAAMC,oBAAoB,GAAG,MAAOjB,QAAP,IAAoB;IAC7C,OAAO,MAAMP,KAAK,CAACE,YAAD,CAAL,CACImB,IADJ,CACUC,IAAD,IAAU;MACZ,MAAMZ,WAAW,GAAGY,IAAI,CAACC,IAAzB;MACA,OAAOb,WAAW,CAACe,MAAZ,CACFC,MAAD,IAAYA,MAAM,CAACnB,QAAP,KAAoBA,QAD7B,CAAP;IAGH,CANJ,CAAb;EAOH,CARD;;EAUA,MAAMoB,eAAe,GAAG,MAAOC,MAAP,IAAkB;IACtC,MAAMrB,QAAQ,GAAGqB,MAAM,CAACC,MAAP,CAAcC,KAA/B;;IACA,IAAIF,MAAM,CAACC,MAAP,CAAcC,KAAd,KAAwB,EAA5B,EAAgC;MAC5BZ,cAAc,CAACd,KAAK,CAACM,WAAP,CAAd;MACAU,SAAS,CAAChB,KAAK,CAACC,MAAP,CAAT;MACA;IACH;;IACDA,MAAM,CAACE,QAAP,GAAkBwB,MAAM,CAACxB,QAAD,CAAxB;IACA,MAAMG,WAAW,GAAG,MAAMc,oBAAoB,CAACnB,MAAM,CAACE,QAAR,CAA9C;IACA,IAAI,CAACyB,KAAK,CAACC,OAAN,CAAcvB,WAAd,CAAL,EAAiC;IAEjCQ,cAAc,CAACR,WAAD,CAAd;IACAU,SAAS,CAACf,MAAD,CAAT;EACH,CAbD;AAiBH;;GAtCuBY,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}